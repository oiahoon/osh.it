name: Deploy OSH.IT Website

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/workflows/deploy-website.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'docs/package.json'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          cd docs
          npm ci || npm install

      - name: Generate dynamic content
        run: |
          cd docs
          node generate-content.js

      - name: Build website
        run: |
          cd docs
          npm run build || echo "No build script found, using static files"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Lighthouse CI job for performance monitoring
  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # SEO and accessibility check
  seo-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g pa11y sitemap-generator-cli

      - name: Check accessibility
        run: |
          echo "Running accessibility checks..."
          pa11y ${{ steps.deployment.outputs.page_url }} || echo "Accessibility check completed with warnings"

      - name: Generate sitemap
        run: |
          echo "Generating sitemap..."
          sitemap-generator ${{ steps.deployment.outputs.page_url }} --filepath ./sitemap.xml || echo "Sitemap generation completed"

  # Performance monitoring
  performance-monitor:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Website Performance Check
        run: |
          echo "🚀 Checking OSH.IT website performance..."
          
          # Check page load time
          LOAD_TIME=$(curl -o /dev/null -s -w '%{time_total}' ${{ steps.deployment.outputs.page_url }})
          echo "Page load time: ${LOAD_TIME}s"
          
          # Check if load time is acceptable (< 3 seconds)
          if (( $(echo "$LOAD_TIME < 3.0" | bc -l) )); then
            echo "✅ Performance check passed: Load time is acceptable"
          else
            echo "⚠️ Performance warning: Load time is slower than expected"
          fi
          
          # Check response status
          STATUS=$(curl -o /dev/null -s -w '%{http_code}' ${{ steps.deployment.outputs.page_url }})
          if [ "$STATUS" = "200" ]; then
            echo "✅ Website is accessible (HTTP $STATUS)"
          else
            echo "❌ Website accessibility issue (HTTP $STATUS)"
            exit 1
          fi

  # Notify deployment status
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy, lighthouse, seo-check, performance-monitor]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Deployment Summary
        run: |
          echo "🎉 OSH.IT Website Deployment Summary"
          echo "=================================="
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Website URL: ${{ needs.deploy.outputs.page_url }}"
          echo ""
          echo "Job Status:"
          echo "- Build: ${{ needs.build.result }}"
          echo "- Deploy: ${{ needs.deploy.result }}"
          echo "- Lighthouse: ${{ needs.lighthouse.result }}"
          echo "- SEO Check: ${{ needs.seo-check.result }}"
          echo "- Performance: ${{ needs.performance-monitor.result }}"
          echo ""
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "✅ OSH.IT website successfully deployed!"
            echo "🚀 Visit: ${{ needs.deploy.outputs.page_url }}"
          else
            echo "❌ Deployment failed. Please check the logs."
          fi
